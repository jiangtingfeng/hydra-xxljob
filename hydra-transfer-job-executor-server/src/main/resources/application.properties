###################### server info #####################
server.namesrvAddr=rocketmq:9876
swagger2.enable=1
###################### spring设置 ###########################
spring.autoconfigure.exclude=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
spring.datasource.dynamic.druid.initial-size=5
spring.datasource.dynamic.druid.min-idle=5
spring.datasource.dynamic.druid.max-active=2000
spring.datasource.dynamic.druid.max-wait=600000
spring.datasource.dynamic.druid.time-between-eviction-runs-millis=60000
spring.datasource.dynamic.druid.min-evictable-idle-time-millis=300000
spring.datasource.dynamic.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.dynamic.druid.test-while-idle=true
spring.datasource.dynamic.druid.test-on-borrow=false
spring.datasource.dynamic.druid.test-on-return=false
spring.datasource.dynamic.primary=master
spring.datasource.dynamic.datasource.master.username=root
spring.datasource.dynamic.datasource.master.password=root
spring.datasource.dynamic.datasource.master.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.dynamic.datasource.master.url=jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf-8&useSSL=false
#从数据库sql server jdbc配置
spring.datasource.dynamic.datasource.secondary.url=jdbc:sqlserver://192.168.20.11:1433;DatabaseName=supercode2_yuchai
spring.datasource.dynamic.datasource.secondary.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.dynamic.datasource.secondary.username=jgw
spring.datasource.dynamic.datasource.secondary.password=jgw31500
###################### redis ###########################
spring.redis.database=0
spring.redis.host=hydra.redis
spring.redis.port=6379
spring.redis.password=123456 
spring.redis.jedis.pool.max-active=8 
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.max-idle=8 
spring.redis.jedis.pool.min-idle=0


#################### rocketMQ ###########################
# 发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
hydra-test.rocketmq.producer.groupName=A-TO-BILL
hydra-test.rocketmq.producer.namesrvAddr=${server.namesrvAddr}
#如果需要同一个jvm中不同的producer往不同的mq集群发送消息，需要设置不同的instanceName
hydra-test.rocketmq.producer.instanceName=A-TO-BILL
#topic名称
hydra-test.rocketmq.producer.topic=A-TO-BILL
#根据实际情况设置消息的tag
hydra-test.rocketmq.producer.tag=A-TO-BILL
#消息最大长度
hydra-test.rocketmq.producer.maxMessageSize=10485760
#发送消息超时时间
hydra-test.rocketmq.producer.sendMsgTimeout=10000
#发送消息线程池数
hydra-test.rocketmq.producer.sendMessageThreadPoolNums=128 #large thread numbers
#发送消息是否使用可重入锁
hydra-test.rocketmq.producer.useReentrantLockWhenPutMessage=true


# 发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
hydra-example.rocketmq.producer.groupName=A-TO-EXAMPLE
#mq的nameserver地址
hydra-example.rocketmq.producer.namesrvAddr=${server.namesrvAddr}
#如果需要同一个jvm中不同的producer往不同的mq集群发送消息，需要设置不同的instanceName
hydra-example.rocketmq.producer.instanceName=A-TO-EXAMPLE
#topic名称
hydra-example.rocketmq.producer.topic=A-TO-EXAMPLE
#根据实际情况设置消息的tag
hydra-example.rocketmq.producer.tag=A-TO-EXAMPLE
#消息最大长度
hydra-example.rocketmq.producer.maxMessageSize=10485760
#发送消息超时时间
hydra-example.rocketmq.producer.sendMsgTimeout=10000
#发送消息线程池数
hydra-example.rocketmq.producer.sendMessageThreadPoolNums=128 #large thread numbers
#发送消息是否使用可重入锁
hydra-example.rocketmq.producer.useReentrantLockWhenPutMessage=true 
hydra-example.rocketmq.consumer.namesrvAddr=${server.namesrvAddr}
hydra-example.rocketmq.consumer.groupName=A-TO-B
hydra-example.rocketmq.consumer.topic=A-TO-B
hydra-example.rocketmq.consumer.consumeThreadMin=20
hydra-example.rocketmq.consumer.consumeThreadMax=64


# log config
logging.config=classpath:logback.xml

### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
xxl.job.admin.addresses=http://192.168.2.215:8080/xxl-job-admin
### xxl-job executor address

xxl.job.executor.appname=hydra-transfer-job-executor
xxl.job.executor.ip=
xxl.job.executor.port=6666

### xxl-job, access token
xxl.job.accessToken=

### xxl-job log path
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
### xxl-job log retention days
xxl.job.executor.logretentiondays=-1